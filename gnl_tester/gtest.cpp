#include <gtest/gtest.h>
#include <fcntl.h>
#include <stdio.h>
#include <limits.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>

extern "C"
{
	#include "../get_next_line.h"
}

/* *******
 * get_next_line
 *********/


TEST(get_next_line, no_nl)
{
	int fd = open("files/no_nl", O_RDONLY);
	EXPECT_STREQ(get_next_line(fd), "01234567890123456789012345678901234567890");
	EXPECT_STREQ(get_next_line(fd), NULL);
	close(fd);
}

TEST(get_next_line, with_nl)
{
	int fd = open("files/with_nl", O_RDONLY);
	EXPECT_STREQ(get_next_line(fd), "0123456789012345678901234567890123456789\n");
	EXPECT_STREQ(get_next_line(fd), "0");
	EXPECT_STREQ(get_next_line(fd), NULL);
	close(fd);
}


TEST(get_next_line, empty)
{
	int fd = open("files/empty", O_RDONLY);
	EXPECT_STREQ(get_next_line(fd), NULL);
	close(fd);
}


TEST(get_next_line, nl)
{
	int fd = open("files/nl", O_RDONLY);
	EXPECT_STREQ(get_next_line(fd), "\n");
	EXPECT_STREQ(get_next_line(fd), NULL);
	close(fd);
}

TEST(get_next_line, multiple_line_no_nl)
{
	int fd = open("files/multiple_line_no_nl", O_RDONLY);
	EXPECT_STREQ(get_next_line(fd), "01234567890123456789012345678901234567890\n");
	EXPECT_STREQ(get_next_line(fd), "987654321098765432109876543210987654321098\n");
	EXPECT_STREQ(get_next_line(fd), "0123456789012345678901234567890123456789012\n");
	EXPECT_STREQ(get_next_line(fd), "987654321098765432109876543210987654321098\n");
	EXPECT_STREQ(get_next_line(fd), "01234567890123456789012345678901234567890");
	EXPECT_STREQ(get_next_line(fd), NULL);
	close(fd);
}

TEST(get_next_line, multiple_line_with_nl)
{
	int fd = open("files/multiple_line_with_nl", O_RDONLY);
	EXPECT_STREQ(get_next_line(fd), "9876543210987654321098765432109876543210\n");
	EXPECT_STREQ(get_next_line(fd), "01234567890123456789012345678901234567890\n");
	EXPECT_STREQ(get_next_line(fd), "987654321098765432109876543210987654321098\n");
	EXPECT_STREQ(get_next_line(fd), "01234567890123456789012345678901234567890\n");
	EXPECT_STREQ(get_next_line(fd), "9876543210987654321098765432109876543210\n");
	close(fd);
}

TEST(get_next_line, mutiple_line_and_nl_eof_no_nl)
{
	int fd = open("files/mutiple_line_and_nl_eof_no_nl", O_RDONLY);
	EXPECT_STREQ(get_next_line(fd), "98765432109876543210987654321098765432109\n");
	EXPECT_STREQ(get_next_line(fd), "\n");
	EXPECT_STREQ(get_next_line(fd), "012345678901234567890123456789012345678901\n");
	EXPECT_STREQ(get_next_line(fd), "\n");
	EXPECT_STREQ(get_next_line(fd), "9876543210987654321098765432109876543210987\n");
	EXPECT_STREQ(get_next_line(fd), "\n");	
	EXPECT_STREQ(get_next_line(fd), "012345678901234567890123456789012345678901\n");
	EXPECT_STREQ(get_next_line(fd), "\n");
	EXPECT_STREQ(get_next_line(fd), "98765432109876543210987654321098765432109");
	close(fd);
}


TEST(get_next_line, mutiple_line_and_nl_eof_nl)
{
	int fd = open("files/mutiple_line_and_nl_eof_nl", O_RDONLY);
	EXPECT_STREQ(get_next_line(fd), "01234567890123456789012345678901234567890\n");
	EXPECT_STREQ(get_next_line(fd), "\n");
	EXPECT_STREQ(get_next_line(fd), "987654321098765432109876543210987654321090\n");
	EXPECT_STREQ(get_next_line(fd), "\n");
	EXPECT_STREQ(get_next_line(fd), "0123456789012345678901234567890123456789012\n");
	EXPECT_STREQ(get_next_line(fd), "\n");	
	EXPECT_STREQ(get_next_line(fd), "987654321098765432109876543210987654321090\n");
	EXPECT_STREQ(get_next_line(fd), "\n");
	EXPECT_STREQ(get_next_line(fd), "01234567890123456789012345678901234567890\n");
	close(fd);
}

// 重すぎて動かなくなるので、保留
// TEST(get_next_line, big_line_no_nl)
// {
// 	int fd = open("files/big_line_no_nl", O_RDONLY);
// 	EXPECT_STREQ(get_next_line(fd), "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678");
	
// }
